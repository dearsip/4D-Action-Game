// ----------------------------------------

[
[0 0 0]
[0 0 1]
[0 1 0]
[0 1 1]
[1 0 0]
[1 0 1]
[1 1 0]
[1 1 1]
[-0.5 0.5 0.5]
[1.5 0.5 0.5]
[0.5 -0.5 0.5]
[0.5 1.5 0.5]
[0.5 0.5 -0.5]
[0.5 0.5 1.5]
][
8 0 edge
8 1 edge
8 2 edge
8 3 edge
9 4 edge
9 5 edge
9 6 edge
9 7 edge
10 0 edge
10 1 edge
10 4 edge
10 5 edge
11 2 edge
11 3 edge
11 6 edge
11 7 edge
12 0 edge
12 2 edge
12 4 edge
12 6 edge
13 1 edge
13 3 edge
13 5 edge
13 7 edge
][
[ 0  1  8  9] [-1 -1  0] face // x-y-
[ 2  3 12 13] [-1  1  0] face // x-y+
[ 4  5 10 11] [ 1 -1  0] face // x+y-
[ 6  7 14 15] [ 1  1  0] face // x+y+
[ 0  2 16 17] [-1  0 -1] face // x-z-
[ 1  3 20 21] [-1  0  1] face // x-z+
[ 4  6 18 19] [ 1  0 -1] face // x+z-
[ 5  7 22 23] [ 1  0  1] face // x+z+
[ 8 10 16 18] [ 0 -1 -1] face // y-z-
[ 9 11 20 22] [ 0 -1  1] face // y-z+
[12 14 17 19] [ 0  1 -1] face // y+z-
[13 15 21 23] [ 0  1  1] face // y+z+
]
shape "rdodeca" def

// ----------------------------------------

[
[0 1 1]
[1 0 1]
[1 1 0]
[1 1 1]
[1.5 0.5 0.5]
[0.5 1.5 0.5]
[0.5 0.5 1.5]
[0.5 0.5 0.5]
][
3 4 edge
3 5 edge
3 6 edge
4 1 edge
4 2 edge
5 0 edge
5 2 edge
6 0 edge
6 1 edge
0 7 edge
1 7 edge
2 7 edge
][
[ 7  8  9 10] [-1 -1  0] face // x-y-
[ 0  1  4  6] [ 1  1  0] face // x+y+
[ 5  6  9 11] [-1  0 -1] face // x-z-
[ 0  2  3  8] [ 1  0  1] face // x+z+
[ 3  4 10 11] [ 0 -1 -1] face // y-z-
[ 1  2  5  7] [ 0  1  1] face // y+z+
]
shape [0.5 0.5 0.5] aligncenter "rdpiece" def

// ----------------------------------------

[
[0 0 0 0]
[0 0 0 1]
[0 0 1 0]
[0 0 1 1]
[0 1 0 0]
[0 1 0 1]
[0 1 1 0]
[0 1 1 1]
[1 0 0 0]
[1 0 0 1]
[1 0 1 0]
[1 0 1 1]
[1 1 0 0]
[1 1 0 1]
[1 1 1 0]
[1 1 1 1]
[-0.5 0.5 0.5 0.5]
[1.5 0.5 0.5 0.5]
[0.5 -0.5 0.5 0.5]
[0.5 1.5 0.5 0.5]
[0.5 0.5 -0.5 0.5]
[0.5 0.5 1.5 0.5]
[0.5 0.5 0.5 -0.5]
[0.5 0.5 0.5 1.5]
][
16 0 edge
16 1 edge
16 2 edge
16 3 edge
16 4 edge
16 5 edge
16 6 edge
16 7 edge
17 8 edge
17 9 edge
17 10 edge
17 11 edge
17 12 edge
17 13 edge
17 14 edge
17 15 edge
18 0 edge
18 1 edge
18 2 edge
18 3 edge
18 8 edge
18 9 edge
18 10 edge
18 11 edge
19 4 edge
19 5 edge
19 6 edge
19 7 edge
19 12 edge
19 13 edge
19 14 edge
19 15 edge
20 0 edge
20 1 edge
20 4 edge
20 5 edge
20 8 edge
20 9 edge
20 12 edge
20 13 edge
21 2 edge
21 3 edge
21 6 edge
21 7 edge
21 10 edge
21 11 edge
21 14 edge
21 15 edge
22 0 edge
22 2 edge
22 4 edge
22 6 edge
22 8 edge
22 10 edge
22 12 edge
22 14 edge
23 1 edge
23 3 edge
23 5 edge
23 7 edge
23 9 edge
23 11 edge
23 13 edge
23 15 edge
0 8 edge
1 9 edge
2 10 edge
3 11 edge
4 12 edge
5 13 edge
6 14 edge
7 15 edge
0 4 edge
1 5 edge
2 6 edge
3 7 edge
8 12 edge
9 13 edge
10 14 edge
11 15 edge
0 2 edge
1 3 edge
4 6 edge
5 7 edge
8 10 edge
9 11 edge
12 14 edge
13 15 edge
0 1 edge
2 3 edge
4 5 edge
6 7 edge
8 9 edge
10 11 edge
12 13 edge
14 15 edge
][
[ 0  1  2  3 16 17 18 19 80 81 88 89] [-1 -1  0  0] face // x-y-
[ 4  5  6  7 24 25 26 27 82 83 90 91] [-1  1  0  0] face // x-y+
[ 8  9 10 11 20 21 22 23 84 85 92 93] [ 1 -1  0  0] face // x+y-
[12 13 14 15 28 29 30 31 86 87 94 95] [ 1  1  0  0] face // x+y+
[ 0  1  4  5 32 33 34 35 72 73 88 90] [-1  0 -1  0] face // x-z-
[ 2  3  6  7 40 41 42 43 74 75 89 91] [-1  0  1  0] face // x-z+
[ 8  9 12 13 36 37 38 39 76 77 92 94] [ 1  0 -1  0] face // x+z-
[10 11 14 15 44 45 46 47 78 79 93 95] [ 1  0  1  0] face // x+z+
[ 0  2  4  6 48 49 50 51 72 74 80 82] [-1  0  0 -1] face // x-w-
[ 1  3  5  7 56 57 58 59 73 75 81 83] [-1  0  0  1] face // x-w+
[ 8 10 12 14 52 53 54 55 76 78 84 86] [ 1  0  0 -1] face // x+w-
[ 9 11 13 15 60 61 62 63 77 79 85 87] [ 1  0  0  1] face // x+w+
[16 17 20 21 32 33 36 37 64 65 88 92] [ 0 -1 -1  0] face // y-z-
[18 19 22 23 40 41 44 45 66 67 89 93] [ 0 -1  1  0] face // y-z+
[24 25 28 29 34 35 38 39 68 69 90 94] [ 0  1 -1  0] face // y+z-
[26 27 30 31 42 43 46 47 70 71 91 95] [ 0  1  1  0] face // y+z+
[16 18 20 22 48 49 52 53 64 66 80 84] [ 0 -1  0 -1] face // y-w-
[17 19 21 23 56 57 60 61 65 67 81 85] [ 0 -1  0  1] face // y-w+
[24 26 28 30 50 51 54 55 68 70 82 86] [ 0  1  0 -1] face // y+w-
[25 27 29 31 58 59 62 63 69 71 83 87] [ 0  1  0  1] face // y+w+
[32 34 36 38 48 50 52 54 64 68 72 76] [ 0  0 -1 -1] face // z-w-
[33 35 37 39 56 58 60 62 65 69 73 77] [ 0  0 -1  1] face // z-w+
[40 42 44 46 49 51 53 55 66 70 74 78] [ 0  0  1 -1] face // z+w-
[41 43 45 47 57 59 61 63 67 71 75 79] [ 0  0  1  1] face // z+w+
]
shape

0 magenta facecolor
1 magenta facecolor
2 magenta facecolor
3 magenta facecolor
4 yellow facecolor
5 yellow facecolor
6 yellow facecolor
7 yellow facecolor
8 cyan facecolor
9 cyan facecolor
10 cyan facecolor
11 cyan facecolor
12 cyan facecolor
13 cyan facecolor
14 cyan facecolor
15 cyan facecolor
16 yellow facecolor
17 yellow facecolor
18 yellow facecolor
19 yellow facecolor
20 magenta facecolor
21 magenta facecolor
22 magenta facecolor
23 magenta facecolor

"r24cell" def

// ----------------------------------------

// although r24cell is in some ways the analogue of rdodeca,
// there's no decomposition into parts with octagonal faces,
// so there's no analogue of rdpiece.
// but, there's another shape that has a nice decomposition,
// and here it is.  see the geom3 examples for full details.

0.4472135955 "r" def // 1 over root 5
r neg "n" def // convenience for face normals

// build toward the user, in the negative w direction,
// so that just the one piece is visible at the start

[
[0 0 0 0]           // 0     0

[ 1  1  1 r -1 mul] // a     1
[-1 -1  1 r -1 mul] // b     2
[-1  1 -1 r -1 mul] // c     3
[ 1 -1 -1 r -1 mul] // d     4
/*
[ 0  0  0 r  4 mul] // e
*/

[ 0  0  2 r -2 mul] // ab    5
[ 0  2  0 r -2 mul] // ac    6
[ 2  0  0 r -2 mul] // ad    7
[-2  0  0 r -2 mul] // bc    8
[ 0 -2  0 r -2 mul] // bd    9
[ 0  0 -2 r -2 mul] // cd   10

[-1 -1 -1 r -3 mul] // bcd  11
[ 1  1 -1 r -3 mul] // acd  12
[ 1 -1  1 r -3 mul] // abd  13
[-1  1  1 r -3 mul] // abc  14

[ 0  0  0 r -4 mul] // abcd 15
][
0 1 edge
0 2 edge
0 3 edge
0 4 edge
1 5 edge
1 6 edge
1 7 edge
2 5 edge
2 8 edge
2 9 edge
3 6 edge
3 8 edge
3 10 edge
4 7 edge
4 9 edge
4 10 edge
11 8 edge
11 9 edge
11 10 edge
12 6 edge
12 7 edge
12 10 edge
13 5 edge
13 7 edge
13 9 edge
14 5 edge
14 6 edge
14 8 edge
15 11 edge
15 12 edge
15 13 edge
15 14 edge
][
[ 4  5  6 19 20 22 23 25 26 29 30 31] [r r r -1] face //  a
[ 1  2  3  8  9 11 12 14 15 16 17 18] [n n n  1] face // ~a
[ 7  8  9 16 17 22 24 25 27 28 30 31] [n n r -1] face //  b
[ 0  2  3  5  6 10 12 13 15 19 20 21] [r r n  1] face // ~b
[10 11 12 16 18 19 21 26 27 28 29 31] [n r n -1] face //  c
[ 0  1  3  4  6  7  9 13 14 22 23 24] [r n r  1] face // ~c
[13 14 15 17 18 20 21 23 24 28 29 30] [r n n -1] face //  d
[ 0  1  2  4  5  7  8 10 11 25 26 27] [n r r  1] face // ~d
]
shape
[0.5 0.5 0.5 0.5] scale
[0.5 0.5 0.5 0.5] translate
[0.5 0.5 0.5 0.5] aligncenter
"p5piece" def

// the normals of faces a and ~a are perpendicular to b, c, and d, and so on,
// and the normals of faces a, b, c, and d are the ones with negative w part.

// ----------------------------------------

[
[ 1  1  1 r -1 mul] // a
[-1 -1  1 r -1 mul] // b
[-1  1 -1 r -1 mul] // c
[ 1 -1 -1 r -1 mul] // d

[ 0  0  0 r  4 mul] // e

[ 0  0  2 r -2 mul] // ab
[ 0  2  0 r -2 mul] // ac
[ 2  0  0 r -2 mul] // ad
[-2  0  0 r -2 mul] // bc
[ 0 -2  0 r -2 mul] // bd
[ 0  0 -2 r -2 mul] // cd

[ 1  1  1 r  3 mul] // ae
[-1 -1  1 r  3 mul] // be
[-1  1 -1 r  3 mul] // ce
[ 1 -1 -1 r  3 mul] // de

[-1 -1 -1 r -3 mul] // bcd
[ 1  1 -1 r -3 mul] // acd
[ 1 -1  1 r -3 mul] // abd
[-1  1  1 r -3 mul] // abc

[ 0  0  2 r  2 mul] // abe
[ 0  2  0 r  2 mul] // ace
[ 2  0  0 r  2 mul] // ade
[-2  0  0 r  2 mul] // bce
[ 0 -2  0 r  2 mul] // bde
[ 0  0 -2 r  2 mul] // cde

[ 0  0  0 r -4 mul] // abcd

[-1 -1 -1 r  1 mul] // bcde
[ 1  1 -1 r  1 mul] // acde
[ 1 -1  1 r  1 mul] // abde
[-1  1  1 r  1 mul] // abce
][
0 5 edge
0 6 edge
0 7 edge
0 11 edge
1 5 edge
1 8 edge
1 9 edge
1 12 edge
2 6 edge
2 8 edge
2 10 edge
2 13 edge
3 7 edge
3 9 edge
3 10 edge
3 14 edge
4 11 edge
4 12 edge
4 13 edge
4 14 edge
5 17 edge
5 18 edge
5 19 edge
6 16 edge
6 18 edge
6 20 edge
7 16 edge
7 17 edge
7 21 edge
8 15 edge
8 18 edge
8 22 edge
9 15 edge
9 17 edge
9 23 edge
10 15 edge
10 16 edge
10 24 edge
11 19 edge
11 20 edge
11 21 edge
12 19 edge
12 22 edge
12 23 edge
13 20 edge
13 22 edge
13 24 edge
14 21 edge
14 23 edge
14 24 edge
25 15 edge
25 16 edge
25 17 edge
25 18 edge
26 15 edge
26 22 edge
26 23 edge
26 24 edge
27 16 edge
27 20 edge
27 21 edge
27 24 edge
28 17 edge
28 19 edge
28 21 edge
28 23 edge
29 18 edge
29 19 edge
29 20 edge
29 22 edge
][
[ 0  1  2 20 21 23 24 26 27 51 52 53] [ r  r  r -1] face // a ~e
[ 4  5  6 20 21 29 30 32 33 50 52 53] [ n  n  r -1] face // b ~e
[ 8  9 10 23 24 29 30 35 36 50 51 53] [ n  r  n -1] face // c ~e
[12 13 14 26 27 32 33 35 36 50 51 52] [ r  n  n -1] face // d ~e

[ 5  6  7 29 31 32 34 42 43 54 55 56] [-1 -1  0  0] face // b ~a
[ 9 10 11 29 31 35 37 45 46 54 55 57] [-1  0 -1  0] face // c ~a
[13 14 15 32 34 35 37 48 49 54 56 57] [ 0 -1 -1  0] face // d ~a
[17 18 19 42 43 45 46 48 49 55 56 57] [ n  n  n  1] face // e ~a

[ 1  2  3 23 25 26 28 39 40 58 59 60] [ 1  1  0  0] face // a ~b
[ 8 10 11 23 25 36 37 44 46 58 59 61] [ 0  1 -1  0] face // c ~b
[12 14 15 26 28 36 37 47 49 58 60 61] [ 1  0 -1  0] face // d ~b
[16 18 19 39 40 44 46 47 49 59 60 61] [ r  r  n  1] face // e ~b

[ 0  2  3 20 22 27 28 38 40 62 63 64] [ 1  0  1  0] face // a ~c
[ 4  6  7 20 22 33 34 41 43 62 63 65] [ 0 -1  1  0] face // b ~c
[12 13 15 27 28 33 34 47 48 62 64 65] [ 1 -1  0  0] face // d ~c
[16 17 19 38 40 41 43 47 48 63 64 65] [ r  n  r  1] face // e ~c

[ 0  1  3 21 22 24 25 38 39 66 67 68] [ 0  1  1  0] face // a ~d
[ 4  5  7 21 22 30 31 41 42 66 67 69] [-1  0  1  0] face // b ~d
[ 8  9 11 24 25 30 31 44 45 66 68 69] [-1  1  0  0] face // c ~d
[16 17 18 38 39 41 42 44 45 67 68 69] [ n  r  r  1] face // e ~d
]
shape
[0.5 0.5 0.5 0.5] scale
[0.5 0.5 0.5 0.5] translate
"p5shape" def

// ----------------------------------------

