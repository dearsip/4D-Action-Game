// ----------------------------------------

[
[0 0 0]
[0 0 1]
[1 0 0]
[1 0 1]
[0.5 0.5 0.5]
][
0 1 edge
1 3 edge
3 2 edge
2 0 edge
0 4 edge
1 4 edge
2 4 edge
3 4 edge
][
[0 1 2 3] [0 -1 0] face // bottom
[0 4 5] [-1 1 0] face   // edge 0 (x=0)
[1 5 7] [0 1 1] face    // edge 1 (z=1)
[2 7 6] [1 1 0] face    // etc
[3 6 4] [0 1 -1] face
]
shape [0.5 0.5 0.5] aligncenter "cap3" def

// could do the same thing with cone
// but I'm keeping this for backward compat of faces

// ----------------------------------------

[
[0 0 0 0]
[0 0 0 1]
[0 0 1 0]
[0 0 1 1]
[1 0 0 0]
[1 0 0 1]
[1 0 1 0]
[1 0 1 1]
[0.5 0.5 0.5 0.5]
][
0 1 edge
0 2 edge
0 4 edge
1 3 edge
1 5 edge
2 3 edge
2 6 edge
3 7 edge
4 5 edge
4 6 edge
5 7 edge
6 7 edge
0 8 edge
1 8 edge
2 8 edge
3 8 edge
4 8 edge
5 8 edge
6 8 edge
7 8 edge
][
[0 1 2 3 4 5 6 7 8 9 10 11] [0 -1 0 0] face // bottom
[0 1 3 5 12 13 14 15] [-1 1 0 0] face       // x=0
[8 9 10 11 16 17 18 19] [1 1 0 0] face      // x=1
[0 2 4 8 12 13 16 17] [0 1 -1 0] face       // z=0
[5 6 7 11 14 15 18 19] [0 1 1 0] face       // z=1
[1 2 6 9 12 14 16 18] [0 1 0 -1] face       // etc
[3 4 7 10 13 15 17 19] [0 1 0 1] face
]
shape [0.5 0.5 0.5 0.5] aligncenter "cap4" def

// could do the same thing with cone
// but I'm keeping this for backward compat of faces

// ----------------------------------------

[
[0 0.5 0.5]
[1 0.5 0.5]
[0.5 0 0.5]
[0.5 1 0.5]
[0.5 0.5 0]
[0.5 0.5 1]
][
0 2 edge
0 3 edge
0 4 edge
0 5 edge
1 2 edge
1 3 edge
1 4 edge
1 5 edge
2 4 edge
2 5 edge
3 4 edge
3 5 edge
][
[5 7 11] [1 1 1] face  // +++
[1 3 11] [-1 1 1] face // etc
[4 7  9] [1 -1 1] face
[5 6 10] [1 1 -1] face
[4 6  8] [1 -1 -1] face
[1 2 10] [-1 1 -1] face
[0 3  9] [-1 -1 1] face
[0 2  8] [-1 -1 -1] face
]
shape "octa" def

// ----------------------------------------

[
[0 0.5 0.5 0.5]
[1 0.5 0.5 0.5]
[0.5 0 0.5 0.5]
[0.5 1 0.5 0.5]
[0.5 0.5 0 0.5]
[0.5 0.5 1 0.5]
[0.5 0.5 0.5 0]
[0.5 0.5 0.5 1]
][
0 2 edge
0 3 edge
0 4 edge
0 5 edge
0 6 edge
0 7 edge
1 2 edge
1 3 edge
1 4 edge
1 5 edge
1 6 edge
1 7 edge
2 4 edge
2 5 edge
2 6 edge
2 7 edge
3 4 edge
3 5 edge
3 6 edge
3 7 edge
4 6 edge
4 7 edge
5 6 edge
5 7 edge
][
[7 9 11 17 19 23] [1 1 1 1] face  // ++++
[1 3  5 17 19 23] [-1 1 1 1] face // etc
[6 9 11 13 15 23] [1 -1 1 1] face
[7 8 11 16 19 21] [1 1 -1 1] face
[7 9 10 17 18 22] [1 1 1 -1] face
[0 3  5 13 15 23] [-1 -1 1 1] face
[1 2  5 16 19 21] [-1 1 -1 1] face
[1 3  4 17 18 22] [-1 1 1 -1] face
[6 8 11 12 15 21] [1 -1 -1 1] face
[6 9 10 13 14 22] [1 -1 1 -1] face
[7 8 10 16 18 20] [1 1 -1 -1] face
[6 8 10 12 14 20] [1 -1 -1 -1] face
[1 2  4 16 18 20] [-1 1 -1 -1] face
[0 3  4 13 14 22] [-1 -1 1 -1] face
[0 2  5 12 15 21] [-1 -1 -1 1] face
[0 2  4 12 14 20] [-1 -1 -1 -1] face
]
shape "hexadeca" def

// ----------------------------------------

[
[0 0 0] // see Coxeter p.53
[0 0 1]
[0 1 0]
[0 1 1]
[1 0 0]
[1 0 1]
[1 1 0]
[1 1 1]
[0.191 -0.309 0.5]
[0.809 -0.309 0.5]
[0.191 1.309 0.5]
[0.809 1.309 0.5]
[0.5 0.191 -0.309]
[0.5 0.809 -0.309]
[0.5 0.191 1.309]
[0.5 0.809 1.309]
[-0.309 0.5 0.191]
[-0.309 0.5 0.809]
[1.309 0.5 0.191]
[1.309 0.5 0.809]
][
8 9 edge
8 0 edge
8 1 edge
9 4 edge
9 5 edge
10 11 edge
10 2 edge
10 3 edge
11 6 edge
11 7 edge
12 13 edge
12 0 edge
12 4 edge
13 2 edge
13 6 edge
14 15 edge
14 1 edge
14 5 edge
15 3 edge
15 7 edge
16 17 edge
16 0 edge
16 2 edge
17 1 edge
17 3 edge
18 19 edge
18 4 edge
18 6 edge
19 5 edge
19 7 edge
][
[0 3 12 11 1] [0 -1 -0.618] face    // 8 9
[0 4 17 16 2] [0 -1 0.618] face     // 8 9
[5 8 14 13 6] [0 1 -0.618] face     // 10 11
[5 9 19 18 7] [0 1 0.618] face      // 10 11
[10 13 22 21 11] [-0.618 0 -1] face // etc
[10 14 27 26 12] [0.618 0 -1] face
[15 18 24 23 16] [-0.618 0 1] face
[15 19 29 28 17] [0.618 0 1] face
[20 23 2 1 21] [-1 -0.618 0] face
[20 24 7 6 22] [-1 0.618 0] face
[25 28 4 3 26] [1 -0.618 0] face
[25 29 9 8 27] [1 0.618 0] face
]
shape "dodeca" def

// ----------------------------------------

[
[0 0 0]
[0 0 1]
[0 1 0]
[0 1 1]
[1 0 0]
[1 0 1]
][
0 1 edge
0 2 edge
0 4 edge
1 3 edge
1 5 edge
2 3 edge
2 4 edge
3 5 edge
4 5 edge
][
[0 1 3 5] [-1 0 0] face // x=0
[0 2 4 8] [0 -1 0] face // y=0
[1 2 6] [0 0 -1] face   // z=0
[3 4 7] [0 0 1] face    // z=1
[5 6 7 8] [1 1 0] face  // diagonal
]
shape [0.5 0.5 0.5] aligncenter "half3" def

// ----------------------------------------

[
[0 0 0 0]
[0 0 0 1]
[0 0 1 0]
[0 0 1 1]
[0 1 0 0]
[0 1 0 1]
[0 1 1 0]
[0 1 1 1]
[1 0 0 0]
[1 0 0 1]
[1 0 1 0]
[1 0 1 1]
][
0 1 edge
0 2 edge
0 4 edge
0 8 edge
1 3 edge
1 5 edge
1 9 edge
2 3 edge
2 6 edge
2 10 edge
3 7 edge
3 11 edge
4 5 edge
4 6 edge
4 8 edge
5 7 edge
5 9 edge
6 7 edge
6 10 edge
7 11 edge
8 9 edge
8 10 edge
9 11 edge
10 11 edge
][
[0 1 2 4 5 7 8 10 12 13 15 17] [-1 0 0 0] face       // x=0
[0 1 3 4 6 7 9 11 20 21 22 23] [0 -1 0 0] face       // y=0
[0 2 3 5 6 12 14 16 20] [0 0 -1 0] face              // z=0
[7 8 9 10 11 17 18 19 23] [0 0 1 0] face             // z=1
[1 2 3 8 9 13 14 18 21] [0 0 0 -1] face              // w=0
[4 5 6 10 11 15 16 19 22] [0 0 0 1] face             // w=1
[12 13 14 15 16 17 18 19 20 21 22 23] [1 1 0 0] face // diagonal
]
shape [0.5 0.5 0.5 0.5] aligncenter "half4" def

// ----------------------------------------

[
[0 0.5 0]
[0 0.5 1]
[0 0 0.5]
[0 1 0.5]
[0.5 0 0]
[0.5 0 1]
[0.5 1 0]
[0.5 1 1]
[1 0.5 0]
[1 0.5 1]
[1 0 0.5]
[1 1 0.5]
][
0 2 edge
0 3 edge
1 2 edge
1 3 edge
0 4 edge
0 6 edge
1 5 edge
1 7 edge
2 4 edge
2 5 edge
3 6 edge
3 7 edge
8 4 edge
8 6 edge
9 5 edge
9 7 edge
10 4 edge
10 5 edge
11 6 edge
11 7 edge
8 10 edge
8 11 edge
9 10 edge
9 11 edge
][
[0 1 2 3] [-1 0 0] face    // x=0
[20 21 22 23] [1 0 0] face // x=1
[8 9 16 17] [0 -1 0] face  // y=0
[10 11 18 19] [0 1 0] face // y=1
[4 5 12 13] [0 0 -1] face
[6 7 14 15] [0 0 1] face
[15 19 23] [1 1 1] face    // +++
[3 7 11] [-1 1 1] face     // etc
[14 17 22] [1 -1 1] face
[13 18 21] [1 1 -1] face
[12 16 20] [1 -1 -1] face
[1 5 10] [-1 1 -1] face
[2 6 9] [-1 -1 1] face
[0 4 8] [-1 -1 -1] face
]
shape "cubocta" def

// ----------------------------------------

